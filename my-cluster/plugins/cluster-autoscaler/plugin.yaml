metadata:
  name: cluster-autoscaler
  version: 0.1.1
spec:
  cluster:
    values:
      image: k8s.gcr.io/cluster-autoscaler:v1.13.4
      replicas: 2
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 300Mi
      options: {}
      prometheusMetrics:
        enabled: false
        interval: "10s"
        namespace: default
        selector:
          prometheus: monitoring
    kubernetes:
      manifests:
      - source:
          path: manifests/rbac.yaml
      - source:
          path: manifests/deployment.yaml
      - source:
          path: manifests/pdb.yaml
      - source:
          path: manifests/service.yaml
      - source:
          path: manifests/servicemonitor.yaml

    cloudformation:
      stacks:
        controlPlane:
          resources:
            content: |
              {
                "IAMManagedPolicyAutoscaler" : {
                  "Type" : "AWS::IAM::ManagedPolicy",
                  "Properties" : {
                    "Description" : "Policy for managing kube-aws k8s controllers",
                    "Path" : "/",
                    "Roles":[ { "Ref" : "IAMRoleController" } ],
                    "PolicyDocument" :   {
                      "Version":"2012-10-17",
                      "Statement": [
                      {
                        "Action": [
                          "autoscaling:DescribeAutoScalingGroups",
                          "autoscaling:DescribeAutoScalingInstances",
                          "autoscaling:DescribeTags",
                          "autoscaling:DescribeLaunchConfigurations",
                          "ec2:DescribeLaunchTemplateVersions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                      },
                      {
                        "Action": [
                          "autoscaling:SetDesiredCapacity",
                          "autoscaling:TerminateInstanceInAutoScalingGroup"
                        ],
                        "Condition": {
                          "Null": { "autoscaling:ResourceTag/kubernetes.io/cluster/{{ .Config.ClusterName }}": "false" }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                      }
                      ]
                    }
                  }
                }
              }
        nodePool:
          tags:
            content: |
              {
                "Tags": [
                  {
                    "Key": "k8s.io/cluster-autoscaler/enabled",
                    "PropagateAtLaunch": "true",
                    "Value": "true"
                  }
                ]
              }
